/**
 * This class is generated by jOOQ
 */
package cn.leapcloud.release.platform.dao.entity.tables;


import cn.leapcloud.release.platform.dao.entity.Circe;
import cn.leapcloud.release.platform.dao.entity.Keys;
import cn.leapcloud.release.platform.dao.entity.tables.records.MysqlHostRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MysqlHost extends TableImpl<MysqlHostRecord> {

	private static final long serialVersionUID = -570529559;

	/**
	 * The reference instance of <code>circe.mysql_host</code>
	 */
	public static final MysqlHost MYSQL_HOST = new MysqlHost();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MysqlHostRecord> getRecordType() {
		return MysqlHostRecord.class;
	}

	/**
	 * The column <code>circe.mysql_host.id</code>.
	 */
	public final TableField<MysqlHostRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>circe.mysql_host.name</code>.
	 */
	public final TableField<MysqlHostRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>circe.mysql_host.address</code>.
	 */
	public final TableField<MysqlHostRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR.length(80), this, "");

	/**
	 * The column <code>circe.mysql_host.is_default</code>.
	 */
	public final TableField<MysqlHostRecord, Byte> IS_DEFAULT = createField("is_default", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>circe.mysql_host.master_id</code>.
	 */
	public final TableField<MysqlHostRecord, Integer> MASTER_ID = createField("master_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>circe.mysql_host.backup_id</code>.
	 */
	public final TableField<MysqlHostRecord, Integer> BACKUP_ID = createField("backup_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>circe.mysql_host.slave_id</code>.
	 */
	public final TableField<MysqlHostRecord, Integer> SLAVE_ID = createField("slave_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>circe.mysql_host.type</code>. host type,0:master, 1:backup, 2:slave
	 */
	public final TableField<MysqlHostRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "host type,0:master, 1:backup, 2:slave");

	/**
	 * Create a <code>circe.mysql_host</code> table reference
	 */
	public MysqlHost() {
		this("mysql_host", null);
	}

	/**
	 * Create an aliased <code>circe.mysql_host</code> table reference
	 */
	public MysqlHost(String alias) {
		this(alias, MYSQL_HOST);
	}

	private MysqlHost(String alias, Table<MysqlHostRecord> aliased) {
		this(alias, aliased, null);
	}

	private MysqlHost(String alias, Table<MysqlHostRecord> aliased, Field<?>[] parameters) {
		super(alias, Circe.CIRCE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MysqlHostRecord, Integer> getIdentity() {
		return Keys.IDENTITY_MYSQL_HOST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MysqlHostRecord> getPrimaryKey() {
		return Keys.KEY_MYSQL_HOST_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MysqlHostRecord>> getKeys() {
		return Arrays.<UniqueKey<MysqlHostRecord>>asList(Keys.KEY_MYSQL_HOST_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MysqlHost as(String alias) {
		return new MysqlHost(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MysqlHost rename(String name) {
		return new MysqlHost(name, null);
	}
}
